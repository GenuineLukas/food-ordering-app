{"ast":null,"code":"var _jsxFileName = \"/Users/a/food-ordering-app/src/components/Meals/AvailableMeals.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport styles from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://fisrt-react-project-default-rtdb.firebaseio.com/meals.json');\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHttError(error);\n    }\n  }, []);\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this);\n  }\n\n  //when loading\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n_s(AvailableMeals, \"zGYmVDclLWxCsVOnH5s7CJcl1Ds=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useEffect","useState","Card","MealItem","styles","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","error","className","mealsError","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsLoading","mealsList","map","meal","_c","$RefreshReg$"],"sources":["/Users/a/food-ordering-app/src/components/Meals/AvailableMeals.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Card from \"../UI/Card\"\nimport MealItem from \"./MealItem/MealItem\";\nimport styles from \"./AvailableMeals.module.css\"\nimport * as http from \"http\";\n\ntype mealType = {\n    id: string,\n    name: string,\n    description: string,\n    price: number,\n}\nconst AvailableMeals = () => {\n    const [meals, setMeals] = useState<mealType[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttError] = useState<any>();\n\n    useEffect(() => {\n        const fetchMeals = async () => {\n            const response =  await fetch('https://fisrt-react-project-default-rtdb.firebaseio.com/meals.json');\n\n            if(!response.ok) {\n                throw new Error('something went wrong!')\n            }\n\n            const responseData = await response.json();\n\n            const loadedMeals: mealType[] = [];\n            for (const key in responseData) {\n                loadedMeals.push({\n                    id: key,\n                    name: responseData[key].name,\n                    description: responseData[key].description,\n                    price: responseData[key].price,\n                })\n            }\n            setMeals(loadedMeals);\n            setIsLoading(false);\n        }\n\n        try{\n            fetchMeals();\n        } catch(error) {\n            setIsLoading(false);\n            setHttError(error);\n        }\n\n    }, []);\n\n    if(httpError){\n        return (<section className={styles.mealsError}>\n            <p>Error!!!</p>\n        </section>);\n    }\n\n    //when loading\n    if(isLoading){\n      return (<section className={styles.mealsLoading}>\n          <p>Loading...</p>\n      </section>);\n    }\n    \n    const mealsList = meals.map((meal) =>\n        <MealItem id={meal.id} key={meal.name} name={meal.name} description={meal.description} price={meal.price}/>);\n    return <section className={styles.meals}>\n        <Card>\n            {mealsList}\n        </Card>\n    </section>\n}\n\nexport default AvailableMeals;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,MAAM,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAShD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EAClD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAM,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,oEAAoE,CAAC;MAEnG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAE1C,MAAMC,WAAuB,GAAG,EAAE;MAClC,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC5BE,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAC7B,CAAC,CAAC;MACN;MACAlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,IAAG;MACCG,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAMc,KAAK,EAAE;MACXjB,YAAY,CAAC,KAAK,CAAC;MACnBE,WAAW,CAACe,KAAK,CAAC;IACtB;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGhB,SAAS,EAAC;IACT,oBAAQP,OAAA;MAASwB,SAAS,EAAE1B,MAAM,CAAC2B,UAAW;MAAAC,QAAA,eAC1C1B,OAAA;QAAA0B,QAAA,EAAG;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EACd;;EAEA;EACA,IAAGzB,SAAS,EAAC;IACX,oBAAQL,OAAA;MAASwB,SAAS,EAAE1B,MAAM,CAACiC,YAAa;MAAAL,QAAA,eAC5C1B,OAAA;QAAA0B,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EACZ;EAEA,MAAME,SAAS,GAAG7B,KAAK,CAAC8B,GAAG,CAAEC,IAAI,iBAC7BlC,OAAA,CAACH,QAAQ;IAACsB,EAAE,EAAEe,IAAI,CAACf,EAAG;IAAiBC,IAAI,EAAEc,IAAI,CAACd,IAAK;IAACC,WAAW,EAAEa,IAAI,CAACb,WAAY;IAACC,KAAK,EAAEY,IAAI,CAACZ;EAAM,GAA7EY,IAAI,CAACd,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAqE,CAAC,CAAC;EAChH,oBAAO9B,OAAA;IAASwB,SAAS,EAAE1B,MAAM,CAACK,KAAM;IAAAuB,QAAA,eACpC1B,OAAA,CAACJ,IAAI;MAAA8B,QAAA,EACAM;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AACd,CAAC;AAAA5B,EAAA,CAzDKD,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AA2DpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}