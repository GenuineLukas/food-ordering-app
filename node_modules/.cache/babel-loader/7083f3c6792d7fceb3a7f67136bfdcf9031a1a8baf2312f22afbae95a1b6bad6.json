{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/food-ordering-app/src/store/CartProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    if (action.item) {\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const existingCartItemIndex = state.items.findIndex(item => {\n        var _action$item;\n        return item.id === ((_action$item = action.item) === null || _action$item === void 0 ? void 0 : _action$item.id);\n      });\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedCartItems;\n      if (existingCartItem) {\n        const updatedItem = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + action.item.amount\n        };\n        updatedCartItems = [...state.items];\n        updatedCartItems[existingCartItemIndex] = updatedItem;\n      } else {\n        //when item is added for the first time\n        updatedCartItems = state.items.concat(action.item);\n      }\n      return {\n        items: updatedCartItems,\n        totalAmount: updatedTotalAmount\n      };\n    }\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedCartItems;\n    if (existingCartItem.amount === 1) {\n      updatedCartItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedCartItems = [...state.items];\n      updatedCartItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedCartItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: \"CLEAR\"\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","item","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","_action$item","id","existingCartItem","updatedCartItems","updatedItem","concat","filter","CartProvider","children","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/food-ordering-app/src/store/CartProvider.tsx"],"sourcesContent":["import React,{useReducer} from 'react';\nimport CartContext from './cart-context';\n\ntype CartProviderProps = {\n    children: React.ReactNode;\n}\n\ntype stateType = {\n    items: itemType[],\n    totalAmount: number,\n}\n\nexport type itemType = {\n    price: number,\n    amount: number,\n    id: string,\n    name: string,\n    key?:string,\n}\n\ntype actionType = {\n    type: string,\n    id?: string,\n    item?: itemType,\n}\n\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\nconst cartReducer = (state: stateType, action: actionType) => {\n    if(action.type === 'ADD'){\n        if(action.item) {\n            const updatedTotalAmount =\n                state.totalAmount + action.item.price * action.item.amount;\n            const existingCartItemIndex = state.items.findIndex(item => item.id === action.item?.id);\n            const existingCartItem = state.items[existingCartItemIndex];\n            let updatedCartItems: itemType[];\n\n            if(existingCartItem) {\n                const updatedItem: itemType = {\n                    ...existingCartItem,\n                    amount: existingCartItem.amount + action.item.amount,\n                }\n                updatedCartItems = [...state.items];\n                updatedCartItems[existingCartItemIndex] = updatedItem;\n            } else { //when item is added for the first time\n                updatedCartItems = state.items.concat(action.item);\n            }\n\n            return {\n                items: updatedCartItems,\n                totalAmount: updatedTotalAmount\n            }\n        }\n    }\n\n    if(action.type === \"REMOVE\"){\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.id\n        );\n        const existingCartItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n        let updatedCartItems;\n        if(existingCartItem.amount === 1){\n            updatedCartItems = state.items.filter(item => item.id !== action.id);\n        }else{\n            const updatedItem: itemType = {\n                ...existingCartItem,\n                amount: existingCartItem.amount - 1,\n            }\n            updatedCartItems = [...state.items];\n            updatedCartItems[existingCartItemIndex] = updatedItem;\n        }\n\n        return {\n            items: updatedCartItems,\n            totalAmount: updatedTotalAmount,\n        }\n    }\n\n    if(action.type === 'CLEAR'){\n        return defaultCartState;\n    }\n    return defaultCartState;\n}\nconst CartProvider = ({children}: CartProviderProps) => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandler = (item: itemType) => {\n        dispatchCartAction({type:\"ADD\", item: item})\n    };\n    const removeItemFromCartHandler = (id: string) => {\n        dispatchCartAction({type:\"REMOVE\", id: id})\n    }\n\n    const clearCartHandler = () => {\n        dispatchCartAction({type:\"CLEAR\"});\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return <CartContext.Provider value={cartContext}>\n        {children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}