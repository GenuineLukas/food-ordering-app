{"ast":null,"code":"var _jsxFileName = \"/Users/a/food-ordering-app/src/store/CartProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    if (action.item) {\n      const updatedItems = state.items.concat(action.item);\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const existingCartItemIndex = state.items.findIndex(item => {\n        var _action$item;\n        return item.id === ((_action$item = action.item) === null || _action$item === void 0 ? void 0 : _action$item.id);\n      });\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedCartItems;\n      if (existingCartItem) {\n        const updatedItem = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + action.item.amount\n        };\n        updatedCartItems = [...state.items];\n        updatedCartItems[existingCartItemIndex] = updatedItem;\n      } else {\n        //when item is added for the first time\n        updatedCartItems = state.items.concat(action.item);\n      }\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n    }\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => {\n      var _action$item2;\n      return item.id === ((_action$item2 = action.item) === null || _action$item2 === void 0 ? void 0 : _action$item2.id);\n    });\n  }\n  return defaultCartState;\n};\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","item","updatedItems","concat","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","_action$item","id","existingCartItem","updatedCartItems","updatedItem","_action$item2","CartProvider","children","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a/food-ordering-app/src/store/CartProvider.tsx"],"sourcesContent":["import React,{useReducer} from 'react';\nimport CartContext from './cart-context';\n\ntype CartProviderProps = {\n    children: React.ReactNode;\n}\n\ntype stateType = {\n    items: itemType[],\n    totalAmount: number,\n}\n\nexport type itemType = {\n    price: number,\n    amount: number,\n    id: string,\n    name: string,\n}\n\ntype actionType = {\n    type: string,\n    id?: string,\n    item?: itemType,\n}\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\nconst cartReducer = (state: stateType, action: actionType) => {\n    if(action.type === 'ADD'){\n        if(action.item) {\n            const updatedItems = state.items.concat(action.item);\n            const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n            const existingCartItemIndex = state.items.findIndex(item => item.id === action.item?.id);\n            const existingCartItem = state.items[existingCartItemIndex];\n            let updatedCartItems: itemType[];\n\n            if(existingCartItem) {\n                const updatedItem: itemType = {\n                    ...existingCartItem,\n                    amount: existingCartItem.amount + action.item.amount,\n                }\n                updatedCartItems = [...state.items];\n                updatedCartItems[existingCartItemIndex] = updatedItem;\n            } else { //when item is added for the first time\n                updatedCartItems = state.items.concat(action.item);\n            }\n\n            return {\n                items: updatedItems,\n                totalAmount: updatedTotalAmount\n            }\n        }\n    }\n\n    if(action.type === \"REMOVE\"){\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item?.id\n        )\n    }\n    return defaultCartState;\n}\nconst CartProvider = ({children}: CartProviderProps) => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandler = (item: itemType) => {\n        dispatchCartAction({type:\"ADD\", item: item})\n    };\n    const removeItemFromCartHandler = (id: string) => {\n        dispatchCartAction({type:\"REMOVE\", id: id})\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return <CartContext.Provider value={cartContext}>\n        {children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}